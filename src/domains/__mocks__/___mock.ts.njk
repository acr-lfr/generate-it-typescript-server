import { mockItGenerator } from 'generate-it-mockers'
{% if pathMethodsHaveAttr(operations, 'x-passResponse') %}import { Response } from 'express';{% endif %}
{% if pathMethodsHaveAttr(operations, 'security', ['jwtToken', 'JwtToken']) %}import {JwtAccess} from '@/http/nodegen/interfaces/JwtAccess';{% endif %}
{% set interfaces = importInterfaces(operations) %}
{% for interface in interfaces -%}
import { {{ interface }} } from '@/http/nodegen/interfaces/{{ interface }}';
{%- endfor %}

class {{ ucFirst(operation_name) }}DomainMock {
  {% for op in operations -%}
    {% for method, path in op.path -%}
      {% if isValidMethod(method) %}
  // Operation ID: {{ path.operationId }}
  async {{ path.operationId }} ({{ pathParamsToDomainParams(method, path, true, false) }}): Promise<{{ path['x-response-definitions']['200'] if path['x-response-definitions']['200'] else 'any' }}> {
    {{mockOutput( path, mockServer )}}
  }
      {% endif %}
    {%- endfor %}
  {%- endfor %}
}
export default new {{ucFirst(operation_name)}}DomainMock()
